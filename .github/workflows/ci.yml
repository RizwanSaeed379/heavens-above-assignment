name: Continuous Integration

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        # REMOVED cache configuration entirely
    
    - name: Install dependencies
      run: npm install
    
    - name: Run ESLint
      run: |
        # Check if eslint is already a dependency
        if grep -q '"eslint"' package.json; then
          npx eslint . --ext .js --ignore-pattern node_modules/ --format compact || echo "ESLint completed with warnings"
        else
          echo "ESLint not configured in package.json. Skipping linting."
        fi
      continue-on-error: true
    
    - name: Security audit
      run: |
        npm audit --audit-level=moderate || echo "Security audit completed with warnings"
      continue-on-error: true
    
    - name: Run tests
      run: |
        if npm run | grep -q "test"; then
          npm test
        else
          echo "No test script found in package.json"
          echo "Running basic validation..."
          node -e "
            try {
              const package = require('./package.json');
              console.log('‚úÖ Package.json validation passed');
              console.log('Project:', package.name);
              console.log('Version:', package.version);
              
              // Basic syntax check of main files
              require('./run.js');
              console.log('‚úÖ run.js syntax is valid');
            } catch (error) {
              console.error('‚ùå Validation failed:', error.message);
              process.exit(1);
            }
          "
        fi
    
    - name: Test application startup
      run: |
        echo "Testing application startup..."
        # Start server in background with a short timeout
        timeout 10s node run.js || exit_code=$?
        
        if [ $? -eq 124 ]; then
          echo "‚úÖ Application started successfully (stopped by timeout)"
        else
          echo "‚ùå Application failed to start or exited early"
          exit 1
        fi

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      run: npm install
    
    - name: Verify project structure
      run: |
        echo "=== Project Structure ==="
        ls -la
        echo -e "\n=== Key Files Check ==="
        [ -f package.json ] && echo "‚úÖ package.json exists" || echo "‚ùå package.json missing"
        [ -f run.js ] && echo "‚úÖ run.js exists" || echo "‚ùå run.js missing"
        [ -d public ] && echo "‚úÖ public/ directory exists" || echo "‚ö†Ô∏è public/ directory not found"
        [ -d views ] && echo "‚úÖ views/ directory exists" || echo "‚ö†Ô∏è views/ directory not found"
        
        echo -e "\n=== Package Info ==="
        node -e "console.log('Name:', require('./package.json').name)"
        node -e "console.log('Version:', require('./package.json').version)"

  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always()
    
    steps:
    - name: Workflow Status Summary
      run: |
        echo "=== CI Pipeline Results ==="
        echo "Test Job: ${{ needs.test.result }}"
        echo "Build Job: ${{ needs.build.result }}"
        
        if [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.build.result }}" == "success" ]; then
          echo "üéâ ALL CHECKS PASSED! Pipeline completed successfully."
        else
          echo "‚ùå PIPELINE FAILED! Check the failed jobs above."
          exit 1
        fi